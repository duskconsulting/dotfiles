## Cormac's dot bash_profile file for OS X (primarily) and Debian / Ubuntu systems
source ~/.git-prompt.sh

# Add scripts from ~/.bash_addons directory
while read file; do source "${file}"; done <<HERE
$(find ${HOME}/.bash_addons -type f)
HERE

# Setting variables to appease requirements of EC2 utils
export EC2_HOME=$HOME/AWS/ec2-api-tools
export AWS_ACCESS_KEY=
export AWS_SECRET_KEY=
export EC2_URL=https://ec2.us-east-1.amazonaws.com
export JAVA_HOME=$(/usr/libexec/java_home)
PATH="/usr/local/bin:/usr/local/sbin:${PATH}"

# Exports for development usage
export BREW_LOGS="/usr/local/var"
export APACHE_LOGS="/usr/local/var/log/apache2"
export ANDROID_HOME="/usr/local/opt/android-sdk"

# Aliases for general convenience
alias ls='ls -GF'
alias l='ls -lAhp'
alias ll='ls -laG|less'
alias l.='ls -dG .*'
alias h='history'
alias makeagig="dd if=/dev/zero of=one_gig.zro bs=1024k count=1024"
cd() { builtin cd "$@"; l; } # always list directory files on cd

# Functions for mirroring and cloning web content
alias wmirr='wget -np -m -w 16 --convert-links' # Morroring with a slight (12 second) pause between attempts
alias i2pget='http_proxy=127.0.0.1:4444 wget -c --no-dns-cache --bind-address=127.0.0.1'

# Functions for formatting
reddit_pgp() { cat "$@" | sed 's/^/    /'; } # precede output with 4 spaces, for pasting into Reddit
trim() { awk '{$1=$1};1'; } # shorthand trimming of leading and trailing \t, \r, \n, and whitespace

# Setting PATH for Python 3.4
# The orginal version is saved in .bash_profile.pysave
#PATH="$HOME/.composer/vendor/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:${PATH}"
PATH="${PATH}:$HOME/.composer/vendor/bin"
    
# Setting PATH for AWS and EC2 utility scripts
PATH="${PATH}:$HOME/AWS/ec2-api-tools/bin:$HOME/AWS/aws-missing-tools"

export PATH

# Make java jar files execute like binaries
if [ -f "/usr/local/bin/w3c.jar" ]; then
	alias w3c='java -jar /usr/local/bin/w3c.jar' # vnu.jar from w3c's validator
fi

#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }

#   4.  SEARCHING
#   ---------------------------

alias qfind="find . -name "                 # qfind:    Quickly search for file
ff () { /usr/bin/find . -iname "*$@*" ; }      # ff:       Find file under the current directory
ffs () { /usr/bin/find . -name "$@"'*' ; }  # ffs:      Find file whose name starts with a given string
ffe () { /usr/bin/find . -name '*'"$@" ; }  # ffe:      Find file whose name ends with a given string


#   ---------------------------
#   5.  PROCESS MANAGEMENT
#   ---------------------------

#   findPid: find out the pid of a specified process
#   -----------------------------------------------------
#       Note that the command name can be specified via a regex
#       E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'
#       Without the 'sudo' it will only find processes of the current user
#   -----------------------------------------------------
    findPid () { lsof -t -c "$@" ; }

#   memHogsTop, memHogsPs:  Find memory hogs
#   -----------------------------------------------------
    alias memHogsTop='top -l 1 -o rsize | head -20'
    alias memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'

#   cpuHogs:  Find CPU hogs
#   -----------------------------------------------------
    alias cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'

#   topForever:  Continual 'top' listing (every 10 seconds)
#   -----------------------------------------------------
    alias topForever='top -l 9999999 -s 10 -o cpu'

#   ttop:  Recommended 'top' invocation to minimize resources
#   ------------------------------------------------------------
#       Taken from this macosxhints article
#       http://www.macosxhints.com/article.php?story=20060816123853639
#   ------------------------------------------------------------
    alias ttop="top -R -F -s 10 -o rsize"

#   my_ps: List processes owned by my user:
#   ------------------------------------------------------------
    my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }


#   ---------------------------
#   6.  NETWORKING
#   ---------------------------

alias myip='curl icanhazip.com'                     # myip:         Public facing IP Address
alias myptr='curl icanhazptr.com'		    # myptr:	    Public PTR ("PoinTeR") Record
alias mytrace='curl icanhaztraceroute.com'	    # mytrace:      Public traceroute
alias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets
alias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets
alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections

#   ---------------------------------------
#   7.  SYSTEMS OPERATIONS & INFORMATION
#   ---------------------------------------

alias mountReadWrite='/sbin/mount -uw /'    # mountReadWrite:   For use when booted into single-user

#   ---------------------------------------
#   8.  WEB DEVELOPMENT
#   ---------------------------------------

alias apacheEdit='sudo edit /etc/httpd/httpd.conf'      # apacheEdit:       Edit httpd.conf
alias apacheRestart='sudo apachectl graceful'           # apacheRestart:    Restart Apache
alias editHosts='sudo edit /etc/hosts'                  # editHosts:        Edit /etc/hosts file
alias herr='tail /var/log/httpd/error_log'              # herr:             Tails HTTP error logs
alias apacheLogs="less +F /var/log/apache2/error_log"   # Apachelogs:   Shows apache error logs
httpHeaders () { /usr/bin/curl -I -L $@ ; }             # httpHeaders:      Grabs headers from web page

#   httpDebug:  Download a web page and show info on what took time
#   -------------------------------------------------------------------
httpDebug () { /usr/bin/curl $@ -o /dev/null -w "dns: %{time_namelookup} connect: %{time_connect} pretransfer: %{time_pretransfer} starttransfer: %{time_starttransfer} total: %{time_total}\n" ; }

# OS-specific aliases & settings
OS=$(uname -s)

case $OS in
  Darwin)
    alias osv='sw_vers -productVersion'                 							# osv:          Show current OS version
    alias disks="diskutil list"                         							#disks:         Show mounted disks + attributes
    alias f='open -a Finder ./'			    							        # f:            Open current directory in Finder
    alias flushDNS='dscacheutil -flushcache'            							# flushDNS:     Flush out the DNS Cache
    alias ipInfo0='ipconfig getpacket en0'              							# ipInfo0:      Get info on connections for en0
    alias disks="diskutil list"                         							# disks:        Show mounted disks + attribute
    alias ipInfo1='ipconfig getpacket en1'              							# ipInfo1:      Get info on connections for en1
    alias showBlocked='sudo ipfw list'                  							# showBlocked:  All ipfw rules inc/ blocked IPs
    macchanger() { sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z && sudo ifconfig $@ en0 ether $(openssl rand -hex 6 | sed "s/\(..\)/\1:/g; s/./0/2; s/..$//") && networksetup -detectnewhardware ; }						   # macchanger:   Change MAC on en0 (main ethernet)
    
    trash() { command mv "$@" ~/.Trash ; }									# trash:        Send items to the Trash bin

    alias wipemeta="find -E . -iregex '.*\.(jpe?g|png|gif|bmp)' -exec exiftool -all= {} \;"			# wipemeta:     Delete metadata from images in working dir
    sniffclear() { tcpdump -A -s0 -vvv -XX -B 4096 'tcp port 80 or port 8080 or port 25 or port 21 or port 6667 or port 6669 or port 6677 or port 6699 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)' >> ~/tcpdump.`date '+%b.%d'`; }					   # sniffclear:   tcpdump today's timestamped packets on common clearnet ports

    #   cdf:  'Cd's to frontmost window of MacOS Finder
    #   ------------------------------------------------------
    cdf () {
        currFolderPath=$( /usr/bin/osascript <<EOT
            tell application "Finder"
                try
            set currFolder to (folder of the front window as alias)
                on error
            set currFolder to (path to desktop folder as alias)
                end try
                POSIX path of currFolder
            end tell
EOT
        )
        echo "cd to \"$currFolderPath\""
        cd "$currFolderPath"
    }

#   spotlight: Search for a file using MacOS Spotlight's metadata
#   -----------------------------------------------------------
    spotlight () { mdfind "kMDItemDisplayName == '$@'wc"; }

#   ii:  display useful host related informaton
#   -------------------------------------------------------------------
    ii() {
        echo -e "\nYou are logged on ${RED}$HOST"
        echo -e "\nAdditionnal information:$NC " ; uname -a
        echo -e "\n${RED}Users logged on:$NC " ; w -h
        echo -e "\n${RED}Current date :$NC " ; date
        echo -e "\n${RED}Machine stats :$NC " ; uptime
        echo -e "\n${RED}Current network location :$NC " ; scselect
        echo -e "\n${RED}Public facing IP Address :$NC " ; curl icanhazip.com
        #echo -e "\n${RED}DNS Configuration:$NC " ; scutil --dns
    }

    #   cleanupDS:  Recursively delete .DS_Store files
    #   -------------------------------------------------------------------
        alias cleanupDS="find . -type f -name '*.DS_Store' -ls -delete"

    #   finderShowHidden:   Show hidden files in Finder
    #   finderHideHidden:   Hide hidden files in Finder
    #   -------------------------------------------------------------------
        alias finderShowHidden='defaults write com.apple.finder ShowAllFiles TRUE'
        alias finderHideHidden='defaults write com.apple.finder ShowAllFiles FALSE'

    #   cleanupLS:  Clean up LaunchServices to remove duplicates in the "Open With" menu
    #   -----------------------------------------------------------------------------------
        alias cleanupLS="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

    #   screensaverDesktop: Run a screensaver on the Desktop
    #   -----------------------------------------------------------------------------------
        alias screensaverDesktop='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background'
    ;;

  Linux)
    if [ -f '/etc/debian_version' ]; then
        OS='Debian'
        alias osv='cat /etc/debian_version'    # osv:   Show Debian version
    fi
    alias disks="fdisk -l"                     # disks: Show mounted disks + attributes

    #  MAC address changer for privacy or interface obfuscation on an untrusted network
    #  ________________________________________________________________________________
      macchanger() { sudo ifconfig $@ down && sudo ifconfig $@ hw $(openssl rand -hex 6 | sed "s/\(..\)/\1:/g; s/./0/2; s/.$//") && sudo ifconfig $@ up ; }

    #  Metadata (Exif) wiping for privacy
    #  _________________________________ 
      alias wipemeta="find -regextype posix-extended -iregex '/.*\.(jpe?g|png|gif|bmp)' -exec exiftool -all= {} \;"
  ;;
esac
